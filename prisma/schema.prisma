generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  email_verify Boolean    @default(false)
  password     String
  status       Boolean    @default(true)
  createAt     String
  updateAt     String
  phone        String     @unique
  avatar       String?    @db.LongText
  ipList       user_IPs[]
}

enum adminRole {
  business
  admin
}

model admins {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  password   String
  status     Boolean      @default(true)
  department Int
  createAt   String
  updateAt   String
  ipList     admins_IPs[]
  FK_admins_departments departments @relation(fields: [department],references: [id])
}

model departments {
  id       Int        @id @default(autoincrement())
  department String     @unique
  status   Boolean    @default(false)
  admins admins[]
  deleted Boolean @default(false)
  createAt String
  updateAt String
}

model admins_IPs {
  id                 Int    @id @default(autoincrement())
  ip                 String
  adminID            Int
  FK_admins_adminsIP admins @relation(fields: [adminID], references: [id])

  @@index([adminID], map: "admins_IPs_adminID_fkey")
}

model user_IPs {
  id              Int    @id @default(autoincrement())
  ip              String
  userID          Int
  FK_users_userIP users  @relation(fields: [userID], references: [id])

  @@index([userID], map: "user_IPs_userID_fkey")
}

model actionRecords {
  id         Int    @id @default(autoincrement())
  operator   String
  operatorId Int
  action     String @db.LongText
  recordTime String
}

model brands {
  id        Int        @id @default(autoincrement())
  brandName String     @unique
  products  products[]
  status    Boolean    @default(false)
  deleted Boolean @default(false)
  createAt  String
  updateAt  String
}

model madeBy {
  id       Int        @id @default(autoincrement())
  country  String     @unique
  products products[]
  status   Boolean    @default(false)
  deleted Boolean @default(false)
  createAt String
  updateAt String
}

model material {
  id       Int        @id @default(autoincrement())
  material String     @unique
  status   Boolean    @default(false)
  deleted Boolean @default(false)
  products products[]
  createAt String
  updateAt String
}

model products {
  id                     Int            @id @default(autoincrement())
  productName            String         @unique
  material               Int
  madeBy                 Int
  categoryId             Int
  brand                  Int
  price                  Float
  avatar                 String         @db.LongText
  status                 Boolean        @default(false)
  description            String         @default("") @db.LongText
  deleted                Boolean        @default(false)
  createAt               String
  updateAt               String
  productPics            productsPics[]
  FK_products_material   material       @relation(fields: [material], references: [id])
  FK_products_madeBy     madeBy         @relation(fields: [madeBy], references: [id])
  FK_products_brands     brands         @relation(fields: [brand], references: [id])
  FK_products_categories categories     @relation(fields: [categoryId], references: [id])
}

model categories {
  id           Int        @id @default(autoincrement())
  categoryName String     @unique
  status       Boolean    @default(false)
  deleted Boolean @default(false)
  createAt     String
  updateAt     String
  productsList products[]
}

model productsPics {
  id                     Int      @id @default(autoincrement())
  picLink                String   @db.LongText
  createAt               String
  updateAt               String
  productId              Int
  FK_products_categories products @relation(fields: [productId], references: [id])
}

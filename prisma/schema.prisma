generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  email_verify Boolean    @default(false)
  password     String
  status       Boolean    @default(true)
  createAt     String
  updateAt     String
  phone        String     @unique
  avatar       String?    @db.LongText
  ipList       user_IPs[]
}

enum adminRole {
  business
  admin
}

enum adminDep {
  specialist
  manager
  director
}

model admins {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  password     String
  status       Boolean    @default(true)
  department   adminDep
  createAt     String
  updateAt     String
  ipList       admins_IPs[]
}

model admins_IPs {
  id              Int    @id @default(autoincrement())
  ip              String
  adminID          Int
  FK_admins_adminsIP admins  @relation(fields: [adminID], references: [id])

  @@index([adminID], map: "admins_IPs_adminID_fkey")
}

model user_IPs {
  id              Int    @id @default(autoincrement())
  ip              String
  userID          Int
  FK_users_userIP users  @relation(fields: [userID], references: [id])

  @@index([userID], map: "user_IPs_userID_fkey")
}

model actionRecords {
  id              Int    @id @default(autoincrement())
  operator  String
  operatorId  Int
  action  String @db.LongText
  recordTime String
}

enum productMaterial {
  aluminum
  inox
  other
}

enum productMadeBy {
  england
  china
  hongkong
  taiwan
  vietnam
  japan
  other
}

enum productBrand {
  jett
  giant
  life
  fonix
  hitasa
  hero
  other
}

model products {
  id              Int    @id @default(autoincrement())
  productName String @unique
  material  productMaterial
  madeBy  productMadeBy
  categoryId  Int
  brand productBrand
  price Float
  status  Boolean @default(false)
  description String @db.LongText @default("")
  rating Float
  createAt     String
  updateAt     String
  productPics productsPics[]
  FK_products_categories categories @relation(fields: [categoryId],references: [id])
}

model categories {
  id              Int    @id @default(autoincrement())
  categoryName String @unique
  status  Boolean @default(false)
  avatar String @db.LongText
  createAt     String
  updateAt     String
  productsList products[]
}

model productsPics{
  id              Int    @id @default(autoincrement())
  picLink String  @db.LongText
  createAt     String
  updateAt     String
  productId Int
  FK_products_categories products @relation(fields: [productId],references: [id])
}

